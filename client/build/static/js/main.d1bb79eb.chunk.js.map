{"version":3,"sources":["components/LogoutButton.js","views/AllPirates.js","components/PirateForm.js","views/NewPirate.js","views/Detail.js","components/RegistrationForm.js","views/Login.js","App.js","serviceWorker.js","index.js"],"names":["LogoutButton","onClick","axios","delete","withCredentials","then","navigate","catch","console","log","AllPirates","useState","pirates","setPirates","useEffect","get","res","data","type","map","pirate","key","_id","to","src","imageUrl","alt","name","width","height","id","filter","PirateForm","method","url","redirectUrl","setName","position","setPosition","treasure","setTreasure","setImageUrl","phrase","setPhrase","hookHand","setHookHand","pegLeg","setPegLeg","eyePatch","setEyePatch","errors","setErrors","error","i","style","color","onSubmit","e","preventDefault","err","errs","innerErrorObj","response","push","message","value","onChange","target","checked","NewPirate","setPirate","RegistrationForm","setError","firstName","lastName","email","password","confirmPassword","formState","setFormState","handleChange","event","post","Login","setEmail","setPassword","App","className","path","Detail","from","noThrow","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1bb79eb.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport {navigate} from '@reach/router';\r\n\r\nexport default function LogoutButton(){\r\n    function handleClick(){\r\n        axios.delete('http://localhost:8000/api/users/logout', {withCredentials: true})\r\n        .then(() => navigate('/login'))\r\n        .catch(console.log);\r\n    }\r\n    return (\r\n        <button onClick={handleClick}>Log Out</button>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {Link, navigate} from '@reach/router';\r\nimport axios from 'axios';\r\nimport LogoutButton from '../components/LogoutButton';\r\n\r\nexport default function AllPirates() {\r\n    const [pirates, setPirates] = useState([]);\r\n    // const [hasError, setHasError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/pirates',{\r\n            withCredentials: true\r\n        })\r\n            .then(res => setPirates(res.data))\r\n            // .catch(() => setHasError(true))\r\n            .catch(() => navigate('/login'))\r\n    }, []);\r\n\r\n\r\n    function handleDelete(id){\r\n        axios.delete('http://localhost:8000/api/pirates/' + id)\r\n        .then(() => setPirates(pirates.filter(pirate => pirate._id !== id)))\r\n    }\r\n\r\n    // if(hasError) return 'Something went wrong';      \r\n\r\n    if(pirates === null) return \"Loading\";\r\n\r\n    return (\r\n        <>\r\n        <LogoutButton />\r\n        <div>            \r\n            <h1>Pirate Crew </h1>\r\n            <button type=\"button\" onClick={() => navigate(\"/pirate/new\")}>Add Pirate</button>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th></th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {pirates.map(pirate => (\r\n                        <tr key={pirate._id}>\r\n                            <td><Link to={\"/pirate/\" + pirate._id}><img src={pirate.imageUrl} alt={pirate.name} width=\"100\" height=\"100\"/> </Link></td>\r\n                            <td><h3>{pirate.name}</h3></td>\r\n                            \r\n                            <td>\r\n                                <button onClick={() => navigate('/pirate/' + pirate._id )}>View Pirate</button>{'   '}\r\n                                <button onClick={() => handleDelete(pirate._id)}>Walk the Plank</button>\r\n                            \r\n                                \r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                    \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {navigate} from '@reach/router';\r\n\r\nexport default function PirateForm({pirate, method, url, redirectUrl}) {\r\n\r\n    const [name, setName] = useState(pirate.name); \r\n    const [position, setPosition] = useState(pirate.position);\r\n    const [treasure, setTreasure] = useState(pirate.treasure);\r\n    const [imageUrl, setImageUrl] = useState(pirate.imageUrl);\r\n    const [phrase, setPhrase] = useState(pirate.phrase);\r\n    const [hookHand, setHookHand] = useState(pirate.hookHand);\r\n    const [pegLeg, setPegLeg] = useState(pirate.pegLeg);\r\n    const [eyePatch, setEyePatch] = useState(pirate.eyePatch);\r\n\r\n    const [errors, setErrors] = useState([]);\r\n\r\n\r\n    function onSubmitHandler (e) {\r\n        e.preventDefault();\r\n        setErrors([]);\r\n        axios[method](url,{\r\n            name,\r\n            position, \r\n            treasure,\r\n            imageUrl,\r\n            phrase,\r\n            hookHand,\r\n            pegLeg,\r\n            eyePatch\r\n        })\r\n            .then(() => navigate('/pirates'))\r\n            .catch(err => {\r\n                const errs = [];\r\n                const innerErrorObj = err.response.data.errors;\r\n\r\n                for(const key in innerErrorObj){\r\n                    errs.push(innerErrorObj[key].message);\r\n                }\r\n                setErrors(errs);\r\n            })\r\n    }   \r\n    return (\r\n        <>\r\n            {errors.map((error, i)=> (\r\n                <p key={i} style={{color: 'red'}}>{error}</p>\r\n            ))}\r\n            <form onSubmit={onSubmitHandler}>\r\n                <div>\r\n                    <p>Pirate name</p>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"name\" \r\n                        value={name} \r\n                        onChange = {e=>setName(e.target.value)}/>\r\n\r\n                    <p>Image URL</p>\r\n                    <input\r\n                        name=\"imageUrl\"\r\n                        value={imageUrl}\r\n                        onChange={e => setImageUrl(e.target.value)}/>\r\n\r\n                    <p># of Treasure chests:</p>\r\n                    <input \r\n                        type=\"number\" \r\n                        name=\"treasure\" \r\n                        value={treasure} \r\n                        onChange = {e => setTreasure(e.target.value)}/>\r\n                    \r\n                    <p>Pirate Catch Phrase</p>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"phrase\" \r\n                        value={phrase} \r\n                        onChange = {e=>setPhrase(e.target.value)}/>\r\n                </div>\r\n                <div>\r\n                    <p>Crew Position:</p>\r\n                    <select onChange={ e => setPosition(e.target.value)}>\r\n                        <option value=\"Captain\">Captain</option>\r\n                        <option value=\"First Mate\">First Mate</option>\r\n                        <option value=\"Quater Master\">Quater Master</option>\r\n                        <option value=\"Boatswain\">Boatswain</option>\r\n                        <option value=\"Powder Monkey\">Powder Monkey</option>                        \r\n                    </select><br/>\r\n\r\n                    <label>Peg Leg</label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={pegLeg}\r\n                        onChange={e => setPegLeg(e.target.checked)}\r\n                    /><br/>\r\n\r\n                    <label>Eye Patch</label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={eyePatch}\r\n                        onChange={e => setEyePatch(e.target.checked)}\r\n                    /><br/>\r\n\r\n                    <label>Hook hand</label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={hookHand}\r\n                        onChange={e => setHookHand(e.target.checked)}\r\n                    />  <br/>                 \r\n                    \r\n                </div>\r\n                <button>Submit</button>{'   '}\r\n                <button type=\"button\" onClick={() => navigate(redirectUrl)}>Cancel</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PirateForm from '../components/PirateForm';\r\nimport {navigate} from '@reach/router';\r\n\r\nexport default function NewPirate() {\r\n    const newPirate = {\r\n            name : '',\r\n            position :'', \r\n            treasure : '',\r\n            imageUrl : '',\r\n            phrase: '',\r\n            hookHand : true,\r\n            pegLeg : true,\r\n            eyePatch : true\r\n        };\r\n        \r\n    return (\r\n        <div>\r\n            <h1>Add Pirate</h1>\r\n            <button type=\"button\" onClick={() => navigate(\"/pirates\")}>Crew Board</button>\r\n            <PirateForm\r\n                pirate = {newPirate}\r\n                method = \"post\"\r\n                url = \"http://localhost:8000/api/pirates\"\r\n                redirectUrl=\"/pirates\"\r\n                />\r\n        </div>\r\n    )\r\n\r\n}","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { navigate} from '@reach/router';\r\n\r\n\r\nexport default ({id}) => {\r\n    const [pirate, setPirate] = useState(null);\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:8000/api/pirates/' + id)\r\n            .then(res=>setPirate(res.data))\r\n    },[id])\r\n\r\n\r\n    if (pirate===null) return 'Loading...';\r\n    return (\r\n        <>\r\n            <div>\r\n                <button type=\"button\" onClick={() => navigate(\"/pirates\")}>Crew Board</button>\r\n                <h1>{pirate.name}</h1>\r\n                <img src={pirate.imageUrl} alt={pirate.name} width=\"300\" height=\"300\"/>  \r\n                <h2>{' \"' + pirate.phrase + '\" '}</h2>\r\n            </div>\r\n            <div>\r\n                <h2>About</h2>\r\n                <p>Position: {pirate.position}</p>\r\n                <p>Treasure: {pirate.treasure}</p>\r\n                <p>Peg Leg: {pirate.pegLeg ? 'Yes' : 'No'}</p>\r\n                <p>Eye Patch: {pirate.eyePatch ? 'Yes' : 'No'}</p>\r\n                <p>Hook hand: {pirate.hookHand ? 'Yes' : 'No'}</p>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nexport default function RegistrationForm(){\r\n    const [error, setError] = useState('');\r\n    const [formState, setFormState] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    });\r\n\r\n    function handleChange(event){\r\n        const { name, value } = event.target;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault();\r\n\r\n        axios.post('http://localhost:8000/api/users',formState, {\r\n            withCredentials: true\r\n        })\r\n        .then(()=> navigate('/pirates'))\r\n        .catch(() => setError('Please check your credentials'));\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Registration</h1>\r\n            {error && (\r\n                <p style = {{color: 'red'}}>{error}</p>\r\n                )}\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>First Name</label>\r\n                    <input \r\n                        name = \"firstName\"\r\n                        value = {formState.firstName}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Last Name</label>\r\n                    <input \r\n                        name = \"lastName\"\r\n                        value = {formState.lastName}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Email</label>\r\n                    <input \r\n                        name = \"email\"\r\n                        value = {formState.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Password</label>\r\n                    <input \r\n                        type = \"password\"\r\n                        name = \"password\"\r\n                        value = {formState.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Confirm Password</label>\r\n                    <input \r\n                        type = \"password\"\r\n                        name = \"confirmPassword\"\r\n                        value = {formState.confirmPassword}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <button>Submit</button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\nimport RegistrationForm from '../components/RegistrationForm';\r\n\r\nexport default function Login(){\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        setError('');\r\n        axios.post('http://localhost:8000/api/users/login',{\r\n            email, \r\n            password\r\n        },{ withCredentials: true })\r\n            .then(()=> navigate ('/pirates'))\r\n            .catch(() => setError('Please check your credentials'));\r\n    }\r\n    return (\r\n        <>\r\n            <h1>Login</h1>\r\n            {error && (\r\n                <p style = {{color: 'red'}}>{error}</p>\r\n            )}\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Email</label>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"email\" \r\n                        value={email} \r\n                        onChange={e => setEmail(e.target.value)}>                        \r\n                    </input>\r\n                </div>\r\n                <div>\r\n                    <label>Password</label>\r\n                    <input \r\n                        type=\"password\"\r\n                        name=\"password\" \r\n                        value={password} \r\n                        onChange={e => setPassword(e.target.value)}>                        \r\n                    </input>\r\n                </div>\r\n                <button>Submit</button>\r\n            </form>\r\n            <RegistrationForm />\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport AllPirates from './views/AllPirates';\nimport NewPirate from './views/NewPirate';\nimport Detail from './views/Detail';\nimport Login from './views/Login';\nimport {Router, Redirect} from '@reach/router';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n            <Login path=\"login\" />\n            <AllPirates path=\"pirates\" />\n            <NewPirate path=\"pirate/new\" />\n            <Detail path=\"pirate/:id\"></Detail>\n            <Redirect\n          from=\"/\"\n          to=\"/pirates\"\n          noThrow\n        />\n        </Router>\n        \n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}